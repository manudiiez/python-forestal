{
  "nodes": [
    {
      "name": "Inicializar",
      "type": "n8n-nodes-base.set",
      "parameters": {
        "values": {
          "string": [
            {
              "name": "proyecto_path",
              "value": "/path/to/proyecto"
            },
            {
              "name": "puntaje_total",
              "value": 0
            },
            {
              "name": "criterios_pasados",
              "value": 0
            },
            {
              "name": "criterios_fallados",
              "value": 0
            }
          ]
        }
      }
    },
    {
      "name": "Verificaciones Estaticas",
      "type": "n8n-nodes-base.executeCommand",
      "parameters": {
        "command": "={{ $json.comando }}",
        "cwd": "={{ $json.proyecto_path }}"
      }
    },
    {
      "name": "Verificaciones Dinamicas",
      "type": "n8n-nodes-base.executeCommand",
      "parameters": {
        "command": "python main.py",
        "cwd": "={{ $json.proyecto_path }}",
        "timeout": 30000
      }
    },
    {
      "name": "Evaluar Criterio",
      "type": "n8n-nodes-base.function",
      "parameters": {
        "functionCode": "const output = $input.all();\nconst criterio = $json;\nconst resultado = output[0].json.stdout;\nconst coincidencias = (resultado.match(/\\n/g) || []).length;\n\nif (criterio.inverted) {\n  criterio.pasado = coincidencias <= criterio.threshold;\n} else {\n  criterio.pasado = coincidencias >= criterio.threshold;\n}\n\ncriterio.puntaje_obtenido = criterio.pasado ? criterio.puntaje : 0;\n\nreturn criterio;"
      }
    },
    {
      "name": "Calcular Total",
      "type": "n8n-nodes-base.aggregate",
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "puntaje_obtenido",
              "renameField": false,
              "operation": "sum",
              "outputFieldName": "puntaje_total"
            }
          ]
        }
      }
    },
    {
      "name": "Generar Reporte",
      "type": "n8n-nodes-base.function",
      "parameters": {
        "functionCode": "const puntaje = $json.puntaje_total;\nconst criterios = $input.all();\n\nconst pasados = criterios.filter(c => c.json.pasado).length;\nconst fallados = criterios.filter(c => !c.json.pasado).length;\n\nconst porcentaje = (puntaje / 260) * 100;\n\nlet calificacion = 'Insuficiente';\nif (porcentaje >= 90) calificacion = 'Excelente';\nelse if (porcentaje >= 80) calificacion = 'Muy Bueno';\nelse if (porcentaje >= 70) calificacion = 'Bueno';\nelse if (porcentaje >= 60) calificacion = 'Suficiente';\n\nreturn {\n  puntaje_total: puntaje,\n  puntaje_maximo: 260,\n  porcentaje: porcentaje.toFixed(2),\n  calificacion: calificacion,\n  criterios_pasados: pasados,\n  criterios_fallados: fallados,\n  aprobado: porcentaje >= 70\n};"
      }
    },
    {
      "name": "Enviar Email",
      "type": "n8n-nodes-base.emailSend",
      "parameters": {
        "fromEmail": "evaluacion@sistema.com",
        "toEmail": "={{ $json.estudiante_email }}",
        "subject": "Resultado Evaluacion - {{ $json.calificacion }}",
        "text": "Puntaje: {{ $json.puntaje_total }}/260 ({{ $json.porcentaje }}%)\nCalificacion: {{ $json.calificacion }}\nCriterios pasados: {{ $json.criterios_pasados }}\nCriterios fallados: {{ $json.criterios_fallados }}"
      }
    }
  ]
}