{
  "puntaje_total": 65,
  "puntaje_maximo": 260,
  "porcentaje": 25.0,
  "calificacion": "Insuficiente",
  "aprobado": false,
  "criterios_pasados": 21,
  "criterios_fallados": 16,
  "resultados": [
    {
      "id": "SING-001",
      "categoria": "Singleton",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 2,
      "puntaje_obtenido": 2,
      "peso": "alto",
      "output": "./python_forestacion/servicios/cultivos/cultivo_service_registry.py:22:    _instance = None\n"
    },
    {
      "id": "SING-002",
      "categoria": "Singleton",
      "pasado": true,
      "coincidencias": 7,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "critico",
      "output": "./python_forestacion/servicios/cultivos/cultivo_service_registry.py:25:    def __new__(cls):\n./.venv/lib/python3.14/site-packages/pip/_vendor/msgpack/ext.py:9:    def __new__(cls, code, data):\n./.venv/lib/python3.14/site-packages/pip/_vendor/pygments/style.py:60:    def __new__(mcs, name, bases, dct):\n./.venv/lib/python3.14/site-packages/pip/_vendor/pygments/lexer.py:43:    def __new__(mcs, name, bases, d):\n./.venv/lib/python3.14/site-packages/pip/_vendor/pygments/lexer.py:352:    def __new__(cl"
    },
    {
      "id": "SING-003",
      "categoria": "Singleton",
      "pasado": true,
      "coincidencias": 3,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "alto",
      "output": "./python_forestacion/servicios/cultivos/cultivo_service_registry.py:3:from threading import Lock\n./.venv/lib/python3.14/site-packages/pip/_vendor/cachecontrol/cache.py:12:from threading import Lock\n./.venv/lib/python3.14/site-packages/pip/_vendor/urllib3/contrib/securetransport.py:111:_connection_ref_lock = threading.Lock()\n"
    },
    {
      "id": "SING-004",
      "categoria": "Singleton",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 2,
      "puntaje_obtenido": 2,
      "peso": "medio",
      "output": "./python_forestacion/servicios/cultivos/cultivo_service_registry.py:64:    def get_instance(cls):\n"
    },
    {
      "id": "FACT-001",
      "categoria": "Factory",
      "pasado": true,
      "coincidencias": 5,
      "threshold": 2,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "critico",
      "output": "./python_forestacion/patrones/factory/cultivo_factory.py:14:    @staticmethod\n./python_forestacion/patrones/factory/cultivo_factory.py:40:    @staticmethod\n./python_forestacion/patrones/factory/cultivo_factory.py:50:    @staticmethod\n./python_forestacion/patrones/factory/cultivo_factory.py:60:    @staticmethod\n./python_forestacion/patrones/factory/cultivo_factory.py:70:    @staticmethod\n"
    },
    {
      "id": "FACT-002",
      "categoria": "Factory",
      "pasado": true,
      "coincidencias": 2,
      "threshold": 1,
      "puntaje_max": 2,
      "puntaje_obtenido": 2,
      "peso": "critico",
      "output": "./python_forestacion/patrones/factory/cultivo_factory.py\n./.venv/lib/python3.14/site-packages/pip/_internal/resolution/resolvelib/factory.py\n"
    },
    {
      "id": "FACT-003",
      "categoria": "Factory",
      "pasado": true,
      "coincidencias": 5,
      "threshold": 4,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "alto",
      "output": "./python_forestacion/patrones/factory/cultivo_factory.py:15:    def crear_cultivo(especie: str) -> Cultivo:\n./python_forestacion/patrones/factory/cultivo_factory.py:41:    def _crear_pino() -> Cultivo:\n./python_forestacion/patrones/factory/cultivo_factory.py:51:    def _crear_olivo() -> Cultivo:\n./python_forestacion/patrones/factory/cultivo_factory.py:61:    def _crear_lechuga() -> Cultivo:\n./python_forestacion/patrones/factory/cultivo_factory.py:71:    def _crear_zanahoria() -> Cultivo:\n"
    },
    {
      "id": "FACT-004",
      "categoria": "Factory",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 2,
      "puntaje_obtenido": 2,
      "peso": "medio",
      "output": "./python_forestacion/patrones/factory/cultivo_factory.py:28:        factories = {\n"
    },
    {
      "id": "OBSR-001",
      "categoria": "Observer",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "critico",
      "output": "./python_forestacion/patrones/observer/observable.py:7:class Observable(Generic[T], ABC):\n"
    },
    {
      "id": "OBSR-002",
      "categoria": "Observer",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "critico",
      "output": "./python_forestacion/patrones/observer/observer.py:7:class Observer(Generic[T], ABC):\n"
    },
    {
      "id": "OBSR-003",
      "categoria": "Observer",
      "pasado": true,
      "coincidencias": 6,
      "threshold": 2,
      "puntaje_max": 4,
      "puntaje_obtenido": 4,
      "peso": "alto",
      "output": "./python_forestacion/riego/sensores/temperatura_reader_task.py:20:class TemperaturaReaderTask(threading.Thread, Observable[float]):\n./python_forestacion/riego/sensores/humedad_reader_task.py:16:class HumedadReaderTask(threading.Thread, Observable[float]):\n./python_forestacion/servicios/negocio/paquete.py:12:class Paquete(Generic[T]):\n./python_forestacion/patrones/observer/observer.py:7:class Observer(Generic[T], ABC):\n./python_forestacion/patrones/observer/observable.py:7:class Observable(Generi"
    },
    {
      "id": "OBSR-004",
      "categoria": "Observer",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "alto",
      "output": "./python_forestacion/patrones/observer/observable.py:42:    def notificar_observadores(self, evento: T) -> None:\n"
    },
    {
      "id": "STRT-001",
      "categoria": "Strategy",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "critico",
      "output": "./python_forestacion/patrones/strategy/absorcion_agua_strategy.py:12:class AbsorcionAguaStrategy(ABC):\n"
    },
    {
      "id": "STRT-002",
      "categoria": "Strategy",
      "pasado": true,
      "coincidencias": 4,
      "threshold": 2,
      "puntaje_max": 4,
      "puntaje_obtenido": 4,
      "peso": "critico",
      "output": "./python_forestacion/servicios/cultivos/arbol_service.py:19:    def __init__(self, estrategia_absorcion: AbsorcionAguaStrategy):\n./python_forestacion/servicios/cultivos/cultivo_service.py:16:    def __init__(self, estrategia_absorcion: AbsorcionAguaStrategy):\n./python_forestacion/patrones/strategy/impl/absorcion_seasonal_strategy.py:17:class AbsorcionSeasonalStrategy(AbsorcionAguaStrategy):\n./python_forestacion/patrones/strategy/impl/absorcion_constante_strategy.py:11:class AbsorcionConstanteStr"
    },
    {
      "id": "STRT-003",
      "categoria": "Strategy",
      "pasado": true,
      "coincidencias": 2,
      "threshold": 2,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "alto",
      "output": "./python_forestacion/servicios/cultivos/cultivo_service.py:23:        self._estrategia_absorcion = estrategia_absorcion\n./python_forestacion/servicios/cultivos/cultivo_service.py:47:        agua_absorvida = self._estrategia_absorcion.calcular_absorcion(\n"
    },
    {
      "id": "EXEC-001",
      "categoria": "Ejecucion",
      "pasado": true,
      "coincidencias": 0,
      "threshold": 0,
      "puntaje_max": 10,
      "puntaje_obtenido": 10,
      "peso": "critico",
      "output": ""
    },
    {
      "id": "EXEC-002",
      "categoria": "Ejecucion",
      "pasado": false,
      "coincidencias": 0,
      "threshold": 1,
      "puntaje_max": 5,
      "puntaje_obtenido": 0,
      "peso": "critico",
      "output": ""
    },
    {
      "id": "EXEC-003",
      "categoria": "Ejecucion",
      "pasado": false,
      "coincidencias": 1,
      "threshold": 0,
      "puntaje_max": 5,
      "puntaje_obtenido": 0,
      "peso": "alto",
      "output": "       0\n"
    },
    {
      "id": "EXEC-004",
      "categoria": "Ejecucion",
      "pasado": false,
      "coincidencias": 0,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 0,
      "peso": "medio",
      "output": ""
    },
    {
      "id": "EXEC-005",
      "categoria": "Ejecucion",
      "pasado": false,
      "coincidencias": 0,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 0,
      "peso": "medio",
      "output": ""
    },
    {
      "id": "EXEC-006",
      "categoria": "Ejecucion",
      "pasado": false,
      "coincidencias": 0,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 0,
      "peso": "medio",
      "output": ""
    },
    {
      "id": "EXEC-007",
      "categoria": "Ejecucion",
      "pasado": false,
      "coincidencias": 0,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 0,
      "peso": "medio",
      "output": ""
    },
    {
      "id": "EXEC-008",
      "categoria": "Funcionalidad",
      "pasado": false,
      "coincidencias": 0,
      "threshold": 4,
      "puntaje_max": 3,
      "puntaje_obtenido": 0,
      "peso": "alto",
      "output": ""
    },
    {
      "id": "EXEC-009",
      "categoria": "Funcionalidad",
      "pasado": false,
      "coincidencias": 0,
      "threshold": 2,
      "puntaje_max": 3,
      "puntaje_obtenido": 0,
      "peso": "alto",
      "output": ""
    },
    {
      "id": "EXEC-010",
      "categoria": "Funcionalidad",
      "pasado": false,
      "coincidencias": 0,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 0,
      "peso": "alto",
      "output": ""
    },
    {
      "id": "QUAL-001",
      "categoria": "Calidad",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "alto",
      "output": "./python_forestacion/constantes.py\n"
    },
    {
      "id": "QUAL-002",
      "categoria": "Calidad",
      "pasado": false,
      "coincidencias": 1,
      "threshold": 0,
      "puntaje_max": 2,
      "puntaje_obtenido": 0,
      "peso": "medio",
      "output": "      59\n"
    },
    {
      "id": "QUAL-003",
      "categoria": "Calidad",
      "pasado": false,
      "coincidencias": 1,
      "threshold": 50,
      "puntaje_max": 3,
      "puntaje_obtenido": 0,
      "peso": "medio",
      "output": "    3743\n"
    },
    {
      "id": "QUAL-004",
      "categoria": "Calidad",
      "pasado": false,
      "coincidencias": 1,
      "threshold": 20,
      "puntaje_max": 2,
      "puntaje_obtenido": 0,
      "peso": "bajo",
      "output": "     386\n"
    },
    {
      "id": "QUAL-005",
      "categoria": "Calidad",
      "pasado": false,
      "coincidencias": 1,
      "threshold": 10,
      "puntaje_max": 2,
      "puntaje_obtenido": 0,
      "peso": "bajo",
      "output": "      25\n"
    },
    {
      "id": "STRC-001",
      "categoria": "Estructura",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 2,
      "puntaje_obtenido": 2,
      "peso": "alto",
      "output": "./python_forestacion/entidades\n"
    },
    {
      "id": "STRC-002",
      "categoria": "Estructura",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 2,
      "puntaje_obtenido": 2,
      "peso": "alto",
      "output": "./python_forestacion/servicios\n"
    },
    {
      "id": "STRC-003",
      "categoria": "Estructura",
      "pasado": true,
      "coincidencias": 1,
      "threshold": 1,
      "puntaje_max": 2,
      "puntaje_obtenido": 2,
      "peso": "critico",
      "output": "./python_forestacion/patrones\n"
    },
    {
      "id": "STRC-004",
      "categoria": "Estructura",
      "pasado": false,
      "coincidencias": 1,
      "threshold": 10,
      "puntaje_max": 2,
      "puntaje_obtenido": 0,
      "peso": "medio",
      "output": "      74\n"
    },
    {
      "id": "METR-001",
      "categoria": "Metricas",
      "pasado": false,
      "coincidencias": 0,
      "threshold": 10,
      "puntaje_max": 3,
      "puntaje_obtenido": 0,
      "peso": "bajo",
      "output": ""
    },
    {
      "id": "METR-002",
      "categoria": "Metricas",
      "pasado": false,
      "coincidencias": 1,
      "threshold": 500,
      "puntaje_max": 0,
      "puntaje_obtenido": 0,
      "peso": "informativo",
      "output": "    3196 total\n"
    },
    {
      "id": "METR-003",
      "categoria": "Metricas",
      "pasado": true,
      "coincidencias": 0,
      "threshold": 5,
      "puntaje_max": 3,
      "puntaje_obtenido": 3,
      "peso": "bajo",
      "output": ""
    }
  ]
}